// xml_file.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <vector>
#include <string>
#include <stack>
#include <fstream>

using namespace std;

void XML_Parser(vector<string> &tags, int &size, vector<string> &s, int &lines, vector<int> &error, vector<bool> &haserror)
{
	char start;
	char end;
	char anotherend;
	string temp;
	string t;
	stack <string> st;


	ifstream indata;
	indata.open("Trial.txt");

	do
	{
		getline(indata, temp);
		s[lines] = temp;
		haserror[lines] = false;
		lines++;

		/* Check if unwanted input */
		if ((temp == "") || (((temp[1] == '?') || (temp[1] == '!')) && temp[0] == '<') || (temp.find("<")==-1) || (temp.find(">")==-1))
			continue;

		start = temp.find("<") + 1;
		end = temp.find(">");


		if (temp[start] == '/')
		{
			t= temp.substr(start + 1, end - start - 1);				// we want the string without '/' to compare with the top of the stack
			if (t != st.top())
				haserror[lines - 1] = true;

			else
				st.pop();

		}


		else
		{
			/* Only push keyword in the stack "synset type="a" id=a00001740" ( Only push synset ) */
			anotherend = temp.find(" ");
			if (anotherend > start && anotherend < end)
				tags[size++] = temp.substr(start, anotherend - start);
			else
				tags[size++] = temp.substr(start, end - start);

			st.push(tags[size - 1]);


			/* Check if the closing angle is in the same string if so parse it and check for error */
			temp = temp.substr(end + 1);
			if (temp != "") {

				if(temp.find("<") == -1 || temp.find(">") == -1)
				{
					haserror[lines - 1] = true;
					continue;
				}

				start = temp.find("<") + 1;
				end = temp.find(">");
				t = temp.substr(start, end - start);

				if (t != st.top())
					haserror[lines - 1] = true;
				else
					st.pop();

			}
		}


	} while (!indata.eof());		// while the file isn't empty keep taking inputs

}

int main()
{
	vector<string> Tags(2000);
	int size = 0;
	vector <string> s(2000);
	vector <int> error(2000);
	vector <bool> haserror(2000);
	int index = 0;

	ifstream in("Trial.txt");				// READ FROM Trial.txt file


	XML_Parser(Tags, size, s, index, error, haserror);


	for (int i = 0; i < index; i++)
	{
		if (haserror[i] == true)
		{
			cout << s[i] << "    <----error here" << endl;
		}
		else
		{
			cout << s[i] << endl;
		}
	}


	return 0;
}

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started:
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file
